generate case tool

Need: pip install fuzzywuzzy

usage:1: python generate_case.py -h

      2: example : python generate_case.py -c 164 


The benefits are as follows:
1: You do not need to manually create two files c_test.xml and c_test.py

2: Automatically put the platform information in testrail directly in case.xml, and then set some other parameters by default.

3: Automatically decompose the test steps in testrail directly into the case.py file. The steps are clear and clear. Leave two lines for each step and one line for one line. These codes are generated by the tool.

4: If the amount of the case is large, the development time will be saved.

5: it will give two similar cases for you to learn


automate generate case example:


"""
(1):Enter POST diagnostic menu.-->    1.Press Crtl+C when booting POST to enter POST Login interface.-->    2. Press GO_sox to login.

EXCEPT: System should enter POST root menu without any Warning message and Error message.
(2): Active POST TFTP sevice-->    1. Select  Image Sub-Menu  -->  TFTP Download

EXCEPT: Tip message  TFTP ready to receive image   apeared.
(3) Upload bin file by POST TFTP Function.-->    1. Run  CMD> TFTP -i IPaddress put bin file  in Dos.

EXCEPT: BIOS, POST, BMC and all devices Firmwares be uploaded without any unexpected problem.-->    1. Bin files should be uploaded without any unexpected problem.-->    2.The upload bin files should be older than all system original devices Firmwares.
(4) Downgrade all firmwares by POST-->    1). Select  Image Sub-Menu  --> Set Firmware Match Rev.  to force system will update to target version.-->    2). Reset SP and boot to POST.-->    3). Repeat step 2-3.-->    4). Select  System Test Sub-Menu  -->  Autoflash  to start updating firmware. Input  y  when original firmware version is same as the upload firmware version.

EXCEPT: Downgrade process should complete without any problem.
(5) Reboot system and guarantee all updated firmware take effect.-->    1.Select  Reset Controller  to reboot system.-->    2. Press Crtl+C when booting POST to enter POST Login interface.-->    2. Press GO_sox to login.

EXCEPT: need to check if two reset happened during force flash FW:-->the first time is the warm reset, after that it will start flashing BIOS...-->once done the SP will reset again.
(6)Check all updated firmware be updated successful.-->    1. Select  Information display  -->  Firmware Inventory  to check the Firmware version-->    2. Select  Resume  -->  Display Resume  to check the Firmware version-->     3. Select  System Test Sub-Menu  -->  Firmware Revision Validate  to check the firmware version.

EXCEPT: Verify all firmware elements(BIOS, POST, BMC, SSP, CMD, PLX, BCM, etc) are upgraded to latest revision successfully. Any workaround or warning/fault must be noted.
(7)Flash all firmware to original version to restore.

EXCEPT:
(8)Repeat step 1-7 to ensure the firmware downgrade under all POR system type can work as expected.

EXCEPT:
(9)$step9

EXCEPT:$except9
(10)$step10

EXCEPT: $except10
"""
from case.CBaseCase import CBaseCase
from pub.Const import FAIL, PASS, INFO, BLOCK, DONE, ERROR

# we serached two writed case similar to this case for you, please have a look : [672, 37573]
class c167_uefi_FirmwareDowngradeToLastReleasedFirmwareSet(CBaseCase):

    def __init__(self):
        super(c167_uefi_FirmwareDowngradeToLastReleasedFirmwareSet, self).__init__(self.__class__.__name__)

    def config(self):
        """
        ************************************************
        [Function]:
        [Input   ]:
        [Output  ]:
        ************************************************
        """
        pass

    def func_step1(self, expected_resp):
        """
        ************************************************
        [Function]:
        [Input   ]:
        [Output  ]:
        ************************************************
        """
        # TODO

    def test(self):
        """
        ************************************************
        [Function]:
        [Input   ]:
        [Output  ]:
        ************************************************
        """

        self.log("[1] Enter POST diagnostic menu.-->    1.Press Crtl+C when booting POST to enter POST Login interface.-->    2. Press GO_sox to login.")
        ret = $func_step1
        if not ret:
            self.log(FAIL, "ret=%d " % ret)

        self.log("[2] Active POST TFTP sevice-->    1. Select  Image Sub-Menu  -->  TFTP Download ")
        ret = $func_step2
        if not ret:
            self.log(FAIL, "ret=%d " % ret)

        self.log("[3] Upload bin file by POST TFTP Function.-->    1. Run  CMD> TFTP -i IPaddress put bin file  in Dos.")
        ret = $func_step3
        if not ret:
            self.log(FAIL, "ret=%d " % ret)

        self.log("[4] Downgrade all firmwares by POST-->    1). Select  Image Sub-Menu  --> Set Firmware Match Rev.  to force system will update to target version.-->    2). Reset SP and boot to POST.-->    3). Repeat step 2-3.-->    4). Select  System Test Sub-Menu  -->  Autoflash  to start updating firmware. Input  y  when original firmware version is same as the upload firmware version.")
        ret = $func_step4
        if not ret:
            self.log(FAIL, "ret=%d " % ret)

        self.log("[5] Reboot system and guarantee all updated firmware take effect.-->    1.Select  Reset Controller  to reboot system.-->    2. Press Crtl+C when booting POST to enter POST Login interface.-->    2. Press GO_sox to login.")
        ret = $func_step5
        if not ret:
            self.log(FAIL, "ret=%d " % ret)

        self.log("[6] Check all updated firmware be updated successful.-->    1. Select  Information display  -->  Firmware Inventory  to check the Firmware version-->    2. Select  Resume  -->  Display Resume  to check the Firmware version-->     3. Select  System Test Sub-Menu  -->  Firmware Revision Validate  to check the firmware version.")
        ret = $func_step6
        if not ret:
            self.log(FAIL, "ret=%d " % ret)

        self.log("[7] Flash all firmware to original version to restore.")
        ret = $func_step7
        if not ret:
            self.log(FAIL, "ret=%d " % ret)

        self.log("[8] Repeat step 1-7 to ensure the firmware downgrade under all POR system type can work as expected.")
        ret = $func_step8
        if not ret:
            self.log(FAIL, "ret=%d " % ret)

        self.log("[9] $step9")
        ret = $func_step9
        if not ret:
            self.log(FAIL, "ret=%d " % ret)

        self.log("[10] $step10")
        ret = $func_step10
        if not ret:
            self.log(FAIL, "ret=%d " % ret)
        pass

    def deconfig(self):
        """
        ************************************************
        [Function]:
        [Input   ]:
        [Output  ]:
        ************************************************
        """
        pass





